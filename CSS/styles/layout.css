/* 
레이아웃

display - inline, block, inline-block
    - html 기본요소의 값을 변경가능
 */

 /* 
 inline요소: ex)span
    - 영역의 크기가 내부 콘텐츠 크기로 정해진다
    - margin, padding 의 top/bottom 지정불가
    - 여러 요소가 가로 배치가 된다
    
block 요소: ex)block
    - 영역의 크기를 width, height 지정할 수 있다.
    - width를 지정하지 않으면 가로 전체를 차지한다.
    - 여러요소가 세로 배치가 된다.
    
inline-block 요소: ex) input...
    - 영역이 크기를 width, height 지정할 수 있다.
    - 여러 요소가 가로 배치가 된다.
    */

/* input{
    width: 50px;
    height: 100px;
    margin: 10px;
    padding: 20px;
}

span{
    display: inline-block;
    width: 30px;
    height: 40px;
    background-color: blue;
} */


/* display: none,
   visibility: hidden
   -  */

/* div{
    height: 200px;
    border: solid;
}
.box2{
    visibility: hidden;
    display: none;
}

.box1{
    background-color: darkorange;
}
.box2{
    background-color: greenyellow;
}
.box3{
    background-color: dodgerblue;
} */



/* float
    - 기본값은 none, left나 right를 지정
    - 차지하는 자리를 지정
    - 한 element가 normal low로부터 빠져 텍스트 및 인라인요소가
    그 주의를 감싸는 자기 컨테이너의 좌우측을 따라 배치되어야 함을 지정
    - 자신이 갈 수 있는 곳 중에서 이동
*/
/* .container{
    border:solid;
    width: 300px;
    margin-left: 100px;
}
.image{
    width: 100px;
    height: 100px;

    background-color: hotpink;
    border: 5px solid blue;

    float: left;
    margin: 10px;
} */


/* positioin
    - 문서 상에 요소를 배치하는 방법을 지정.
    - top, right, bottom, left 속성이 요소를 배치할 최종위치 결정
    - 기본값은 static: normal flow에 따라 배치
    - relative, asolute, fixed, sticky
*/
/* div{
    width: 30px;
    height: 30px;

    border: solid;
} */


/* relative
    - normal flow로 배치한 후 
    자기 자신을 기준으로 위아래양옆으로 이동
    - 음수값 할당 가능
    - top bottom 을 같이 할당 했을 시 bottom은 무시
    - left right 를 같이 할당 했을 시 right는 무시
    -
*/
/* div{
    width: 200px;
    height: 200px;
    border: 5px solid orangered;
    margin-left: 150px;
}

#box{
    background-color: peachpuff;
    position: relative;

    top: 50px;
    left: -80px;
    bottom: -100px;
} */


/* absolute
    - 일반적인 문서 흐름에서 제거하고,
    페이지 레이아웃에 공간도 배저하지 않는다.
    - 가장 가까운 조상에 상대적으로 배치
    - 조상요소중에 위치지정요소가 없다면 컨테이닝
    블록을 기준으로 삼는다.
    - position: absolute인 요소는,
    조상 중에서 position이 static이 아닌 요소를
    찾아 기준점을 찾는다.
*/
/* div{
    width: 200px;
    height: 200px;
    border: 5px solid orangered;
}
#parent{
    position: relative;
}

#box{
    width: 150px;
    height: 100px;
    border-color: darkblue;
    background-color: cornflowerblue;
    border-radius: 30px;

    position: absolute;

    top: 100px;
    left: 20px;
} */


/* fixed
    - 일반적인 문소흐름에서 제거하고,
    페이지 레이아웃에 공간도 배정하지 않는다.
    - 뷰포트의 초기 컨테이너 블록을 기준으로 삼는다.
    -
*/
/* div{
    width: 200px;
    height: 200px;
    border: 5px solid orangered;
}
#parent{
    position: relative;
}
#box{
    width: 150px;
    height: 100px;
    border-color: darkblue;
    background-color: cornflowerblue;
    border-radius: 30px;

    position: fixed;

    bottom: fixed;
    bottom: 40px;
    right: 40px;
} */


/* sticky
    - 가장 가까운 스크롤이 되는 조상을 기준으로 삼는다
    -
*/
/* div{
    width: 200px;
    height: 200px;
    border: 5px solid orangered;
}
#parent{
    position: sticky;
    top: 100px;
    left: 100px;
}
#box{
    width: 150px;
    height: 100px;
    border-color: darkblue;
    background-color: cornflowerblue;
    border-radius: 30px;

} */



/* overflow
    - 콘텐츠가 영역에서 넘쳐흐를때
    - 단축속성임
    - overflow-x, overflow-y의 값을 설정
    - 기본값은 visible
    - hidden, scroll, auto(브라우저가 선택, 넘치지 않으면 스크롤 없앰)
*/
/* div{
    background-color: beige;

    width: 200px;
    height: 225px;

    overflow: auto;
} */


/* z-index 
    - z축 순서를 지정한다
    - 더 큰 z-index 값을 가진 요소가 작은 값의
    위를 덮는다.
    - 기본값은 auto, 
    position이 static이 아닌 요소보다 앞에 있게 된다.
    기본적으로는 코드 순
    기본 0으로 생각하면 된다.
    - 정수값 사용
*/
div{
    width: 150px;
    height: 150px;
    background-color: blanchedalmond;
    border: 3px solid orangered;
}

#box2, #box3{
    margin-top: -30px;
}

#box2{
    margin-left: 40px;

    position: relative;
    z-index: -1;
}

#box3{
    position: relative;
    z-index: auto;
}
